<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>creational-builder-example</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//üë∑‚Äç‚ôÇÔ∏è Builder
//
//The builder pattern is used to create complex objects with constituent parts that must be created in the same order or using a specific algorithm. An external class controls the construction algorithm.
//

class Product {
    var property1: Int
    var property2: Int
    init() {
        self.property1 = 0
        self.property2 = 0
    }
}

protocol Builder {
    func build() -&gt; Product
    func set(property1: Int) -&gt; Builder
    func set(property2: Int) -&gt; Builder
}

class BuilderImplementation: Builder {
    
    private var product = Product()
    
    func build() -&gt; Product {
        return product
    }
    
    func set(property1: Int) -&gt; Builder {
        product.property1 = property1
        return self
    }
    
    func set(property2: Int) -&gt; Builder {
        product.property2 = property2
        return self
    }
}

class Director {
    
    private var builder: Builder
    
    init(builder: Builder) {
        self.builder = builder
    }
    
    func construct() -&gt; Product {
        return builder.set(property1: 1)
        .set(property2: 2)
        .build()
    }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>BD20E416-01E9-4734-BA1E-CF26A8CF546E</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetSummary</key>
	<string>The builder pattern is used to create complex objects with constituent parts that must be created in the same order or using a specific algorithm. An external class controls the construction algorithm.</string>
	<key>IDECodeSnippetTitle</key>
	<string>Builder</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
