<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>creational-factory-example</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// üè≠ Factory Method
//
// The factory pattern is used to replace class constructors, abstracting the process of object generation so that the type of the object instantiated can be determined at run-time.

protocol Creator {
    static func make() -&gt; Product
}

protocol Product {
    
}

struct CreatorImplementation: Creator {
    static func make() -&gt; Product {
        return ProductImplementation()
    }
}

struct ProductImplementation: Product {
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>DAA4EED3-4F50-4F32-BEF7-A3B35AEA6A4C</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetSummary</key>
	<string>/The factory pattern is used to replace class constructors, abstracting the process of object generation so that the type of the object instantiated can be determined at run-time.</string>
	<key>IDECodeSnippetTitle</key>
	<string>Factory</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
